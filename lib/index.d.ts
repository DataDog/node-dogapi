/** Declaration file generated by dts-gen */
declare module 'dogapi';

export const CRITICAL: number;

export const OK: number;

export const UNKNOWN: number;

export const WARNING: number;

export function initialize(options: any): void;

export function now(): any;

export namespace client {
    const api_host: string;

    const api_key: any;

    const api_version: string;

    const app_key: any;

    const http_options: any;

    const proxy_agent: any;

    function request(method: any, path: any, params: any, callback: any, ...args: any[]): void;

}

export namespace comment {
    function create(message: any, properties: any, callback: any, ...args: any[]): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function remove(commentId: any, callback: any): void;

    function update(commentId: any, message: any, handle: any, callback: any, ...args: any[]): void;

}

export namespace downtime {
    function create(scope: any, properties: any, callback: any, ...args: any[]): void;

    function get(downtimeId: any, callback: any): void;

    function getAll(callback: any): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function remove(downtimeId: any, callback: any): void;

    function update(downtimeId: any, properties: any, callback: any, ...args: any[]): void;

}

export namespace embed {
    function create(graphJSON: any, options: any, callback: any): void;

    function get(embedId: any, callback: any): void;

    function getAll(callback: any): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function revoke(embedId: any, callback: any): void;

}

export namespace event {
    function create(title: any, text: any, properties: any, callback: any, ...args: any[]): void;

    function get(eventId: any, callback: any): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function query(start: any, end: any, parameters: any, callback: any, ...args: any[]): void;

}

export namespace graph {
    function createEmbed(graphJSON: any, options: any, callback: any): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function snapshot(query: any, from: any, to: any, eventQuery: any, callback: any, ...args: any[]): void;

}

export namespace host {
    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function mute(hostname: any, options: any, callback: any, ...args: any[]): void;

    function unmute(hostname: any, callback: any): void;

}

export namespace infrastructure {
    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function search(query: any, callback: any): void;

}

export namespace metric {
    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function query(from: any, to: any, query: any, callback: any): void;

    function send(metric: any, points: any, extra: any, callback: any, ...args: any[]): void;

    function send_all(metrics: any, callback: any): any;

}

export namespace monitor {
    function create(type: any, query: any, properties: any, callback: any, ...args: any[]): void;

    function get(monitorId: any, groupStates: any, callback: any, ...args: any[]): void;

    function getAll(options: any, callback: any, ...args: any[]): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function mute(monitorId: any, options: any, callback: any, ...args: any[]): void;

    function muteAll(callback: any): void;

    function remove(monitorId: any, callback: any): void;

    function unmute(monitorId: any, scope: any, callback: any, ...args: any[]): void;

    function unmuteAll(callback: any): void;

    function update(monitorId: any, query: any, properties: any, callback: any, ...args: any[]): void;

}

export namespace screenboard {
    function create(boardTitle: any, widgets: any, options: any, callback: any, ...args: any[]): void;

    function get(boardId: any, callback: any): void;

    function getAll(callback: any): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function remove(boardId: any, callback: any): void;

    function share(boardId: any, callback: any): void;

    function update(boardId: any, boardTitle: any, widgets: any, options: any, callback: any, ...args: any[]): void;

}

export namespace search {
    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function query(query: any, callback: any): void;

}

export namespace serviceCheck {
    function check(check: any, hostName: any, status: any, parameters: any, callback: any, ...args: any[]): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

}

export namespace tag {
    function create(hostname: any, tags: any, source: any, callback: any, ...args: any[]): void;

    function get(hostname: any, options: any, callback: any, ...args: any[]): void;

    function getAll(source: any, callback: any, ...args: any[]): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function remove(hostname: any, source: any, callback: any, ...args: any[]): void;

    function update(hostname: any, tags: any, source: any, callback: any, ...args: any[]): void;

}

export namespace timeboard {
    function create(title: any, description: any, graphs: any, templateVariables: any, callback: any, ...args: any[]): void;

    function get(dashId: any, callback: any): void;

    function getAll(callback: any): void;

    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function remove(dashId: any, callback: any): void;

    function update(dashId: any, title: any, description: any, graphs: any, templateVariables: any, callback: any, ...args: any[]): void;

}

export namespace user {
    function getHelp(): any;

    function getUsage(): any;

    function handleCli(subcommand: any, args: any, callback: any): void;

    function invite(emails: any, callback: any): void;

}


